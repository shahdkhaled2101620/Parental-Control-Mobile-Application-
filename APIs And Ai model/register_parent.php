<?php// register_parent.phperror_reporting(E_ALL);ini_set('display_errors', '1');require_once 'db_connection.php'; // Include the database connection// Function to validate email format and domainfunction validateEmail($email) {    // Normalize the email    $email = strtolower(trim($email));    // Validate format using PHP's filter_var    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {        return "Invalid email format.";    }    // Extract the domain from the email    list($localPart, $domain) = explode('@', $email);    // Check if the domain has valid MX records    if (!checkdnsrr($domain, 'MX')) {        return "Invalid email domain.";    }    // Block disposable email domains    $disposable_domains = [        '10minutemail.com',        'tempmail.com',        'mailinator.com'    ];    if (in_array($domain, $disposable_domains)) {        return "Disposable email addresses are not allowed.";    }    // Enforce length limits    if (strlen($email) > 254) {        return "Email address is too long.";    }    return true; // Validation passed}// Get JSON data from the request body$data = json_decode(file_get_contents("php://input"), true);// Extract input fields with default values$email = trim($data['email'] ?? '');$password = trim($data['password'] ?? '');$full_name = trim($data['full_name'] ?? '');$image_path = trim($data['image_path'] ?? '');// Validate inputif (empty($email) || empty($password) || empty($full_name) || empty($image_path)) {    echo json_encode(["status" => "error", "message" => "All fields are required."]);    exit;}// Validate email format and domain$emailValidationResult = validateEmail($email);if ($emailValidationResult !== true) {    echo json_encode(["status" => "error", "message" => $emailValidationResult]);    exit;}// Hash the password securely$password_hash = password_hash($password, PASSWORD_BCRYPT);// Check if the email already exists in the database$stmt_check_email = $conn->prepare("SELECT Email FROM Parent WHERE Email = ?");$stmt_check_email->bind_param("s", $email);$stmt_check_email->execute();$result = $stmt_check_email->get_result();if ($result->num_rows > 0) {    echo json_encode(["status" => "error", "message" => "Email is already registered."]);    $stmt_check_email->close();    exit;}// Prepare and execute the SQL query to insert the new parent$stmt = $conn->prepare("INSERT INTO Parent (Email, Password_Hash, Full_Name, Image_Path) VALUES (?, ?, ?, ?)");$stmt->bind_param("ssss", $email, $password_hash, $full_name, $image_path);if ($stmt->execute()) {    echo json_encode(["status" => "success", "message" => "Parent registered successfully."]);} else {    echo json_encode(["status" => "error", "message" => "Registration failed: " . $stmt->error]);}// Close the statements and connection$stmt_check_email->close();$stmt->close();$conn->close();?>